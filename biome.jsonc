{
  "$schema": "https://biomejs.dev/schemas/1.9.4/schema.json",
  "vcs": { "enabled": false, "clientKind": "git", "useIgnoreFile": false },
  "files": {
    "ignoreUnknown": false,
    "ignore": [
      "**/.next",
      "**/out",
      "**/build",
      "**/dist",
      "**/.turbo",
      "**/node_modules",
      "**/scripts",
      "./src/stateMachine/robot3",
      "./tests/mocks/buildSchema.js"
    ]
  },
  "formatter": {
    "enabled": true,
    "formatWithErrors": false,
    "indentStyle": "space",
    "indentWidth": 2,
    "lineEnding": "lf",
    "lineWidth": 120,
    "attributePosition": "auto",
    "bracketSpacing": true
  },
  "organizeImports": { "enabled": true },
  "linter": {
    "enabled": true,
    "rules": {
      "recommended": true,
      "a11y": {
        "noLabelWithoutControl": "info",
        "noSvgWithoutTitle": "info",
        "useAltText": "info",
        "useKeyWithClickEvents": "info",
        "useKeyWithMouseEvents": "info",
        "useButtonType": "info",
        "useSemanticElements": "info"
      },
      "complexity": {
        "noExtraBooleanCast": "error",
        "noMultipleSpacesInRegularExpressionLiterals": "error",
        "noUselessCatch": "error",
        "noUselessThisAlias": "error",
        "noUselessTypeConstraint": "error",
        "noWith": "error",
        "useArrowFunction": "error",
        "noForEach": "info" //todo: make it warn
      },
      "correctness": {
        "noConstAssign": "error",
        "noConstantCondition": "error",
        "noEmptyCharacterClassInRegex": "error",
        "noEmptyPattern": "error",
        "noGlobalObjectCalls": "error",
        "noInvalidBuiltinInstantiation": "error",
        "noInvalidConstructorSuper": "error",
        "noInvalidUseBeforeDeclaration": "error",
        "noNonoctalDecimalEscape": "error",
        "noPrecisionLoss": "error",
        "noSelfAssign": "error",
        "noSetterReturn": "error",
        "noSwitchDeclarations": "error",
        "noUndeclaredVariables": "error",
        "noUnreachable": "error",
        "noUnreachableSuper": "error",
        "noUnsafeFinally": "error",
        "noUnsafeOptionalChaining": "error",
        "noUnusedImports": "error",
        "noUnusedLabels": "error",
        "noUnusedPrivateClassMembers": "error",
        "noUnusedVariables": "error",
        "useArrayLiterals": "off",
        "useExhaustiveDependencies": "off", //probably we will need to turn this on eventually
        "useIsNan": "error",
        "useValidForDirection": "error",
        "useYield": "error"
      },
      "performance": {
        "noAccumulatingSpread": "info" //todo warn
      },
      "style": {
        "noNamespace": "error",
        "noParameterAssign": "error",
        "useAsConstAssertion": "error",
        "useBlockStatements": "error",
        "useImportType": "error",
        "useNodejsImportProtocol": "off", // it generates some issues
        "useTemplate": "error"
      },
      "suspicious": {
        "noAssignInExpressions": "error",
        "noAsyncPromiseExecutor": "error",
        "noArrayIndexKey": "warn",
        "noCatchAssign": "error",
        "noClassAssign": "error",
        "noCompareNegZero": "error",
        "noControlCharactersInRegex": "error",
        "noDebugger": "error",
        "noDuplicateCase": "error",
        "noDuplicateClassMembers": "error",
        "noDuplicateObjectKeys": "error",
        "noDuplicateParameters": "error",
        "noEmptyBlockStatements": "info", //todo: not sure if enable it
        "noExplicitAny": "info", //todo: make it warn
        "noExtraNonNullAssertion": "error",
        "noFallthroughSwitchClause": "error",
        "noFunctionAssign": "error",
        "noGlobalAssign": "error",
        "noImportAssign": "error",
        "noMisleadingCharacterClass": "error",
        "noMisleadingInstantiator": "error",
        "noPrototypeBuiltins": "error",
        "noRedeclare": "info", //probably to turn on again later
        "noShadowRestrictedNames": "error",
        "noSparseArray": "error",
        "noUnsafeDeclarationMerging": "error",
        "noUnsafeNegation": "error",
        "useGetterReturn": "error",
        "useNamespaceKeyword": "error",
        "useValidTypeof": "error"
      },
      "nursery": {
        "useSortedClasses": "error",
        // "noSecrets": "warn", todo: how to ignore them
        "useAtIndex": "info"
      }
    }
  },
  "javascript": {
    "formatter": {
      "jsxQuoteStyle": "double",
      "quoteProperties": "asNeeded",
      "trailingCommas": "all",
      "semicolons": "always",
      "arrowParentheses": "always",
      "bracketSameLine": false,
      "quoteStyle": "single",
      "attributePosition": "auto",
      "bracketSpacing": true
    }
  }
}
